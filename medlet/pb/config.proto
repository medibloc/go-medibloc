syntax = "proto3";
package medletpb;

// Med global configurations.
message Config {
    // Network config.
    NetworkConfig network  = 1;
    // Chain config.
    ChainConfig chain = 2;
    // RPC config.
    RPCConfig rpc = 3;
    // Stats config.
    StatsConfig stats = 100;
    // Misc config.
    MiscConfig misc = 101;
    // App Config.
    AppConfig app = 102;
}

message NetworkConfig {
    // Med seed node address.
    repeated string seed = 1;
    // Listen addresses.
    repeated string listen = 2;
    // Network node privateKey address. If nil, generate a new node.
    string private_key = 3;
    // Network ID
    uint32 network_id = 4;
}

message ChainConfig {
    // ChainID.
    uint32 chain_id = 1;
    // genesis conf file path
    string genesis = 2;

    // Data dir.
    string datadir = 11;
    // Key dir.
    string keydir = 12;

    // start mine at launch
    bool start_mine = 20;

    // Coinbase.
    string coinbase = 21;
    // Miner.
    string miner = 22;
    // Passphrase.
    string passphrase = 23;
    // Supported signature cipher list. ["ECC_SECP256K1"]
    repeated string signature_ciphers = 24;
}

message RPCConfig {
    // RPC listen addresses.
    repeated string rpc_listen = 1;
    // HTTP listen addresses.
    repeated string http_listen = 2;
    // Enabled HTTP modules.["api", "admin"]
    repeated string http_module = 3;
    // Connection limit.
    int32 connection_limits = 4;
}

message AppConfig {
    // log level
    string log_level = 1;
    // log file path
    string log_file = 2;
    // log file age, unit is s.
    uint32 log_age = 3;
    // pprof config
    PprofConfig pprof = 4;

    // App version
    string version = 100;
}

message PprofConfig {
    // pprof listen address, if not configured, the function closes.
    string http_listen = 1;
    // cpu profiling file, if not configured, the profiling not start
    string cpuprofile = 2;
    // memory profiling file, if not configured, the profiling not start
    string memprofile = 3;
}

message MiscConfig {
    // Default encryption ciper when create new keystore file.
    string default_keystore_file_ciper = 1;
}

message StatsConfig {
    // Enable metrics of not.
    bool enable_metrics = 1;

    // Reporting modules.
    enum ReportingModule {
        Influxdb = 0;
    }
    repeated ReportingModule reporting_module = 2;

    // Influxdb config.
    InfluxdbConfig influxdb = 11;

    repeated string metrics_tags = 12;
}

message InfluxdbConfig {
    // Host.
    string host = 1;
    // Port.
    uint32 port = 2;
    // Database name.
    string db = 3;
    // Auth user.
    string user = 4;
    // Auth password.
    string password = 5;
}
